generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Product {
  id                String   @id @default(uuid())
  createdAt         DateTime @default(now())
  title             String
  originalUrl       String   @unique
  shopUrl           String
  productBrandId    String
  productCategoryId String
  published         Boolean  @default(true)

  productExtensionText  ProductExtensionText[]
  productExtensionImage ProductExtensionImage[]
  generatedText         GeneratedText[]
  generatedImage        GeneratedImage[]
  textTagExpectation    TextTag[]
  imageTagExpectation   ImageTag[]

  productBrand ProductBrand    @relation(fields: [productBrandId], references: [id])
  category     ProductCategory @relation(fields: [productCategoryId], references: [id])

  @@index([originalUrl])
  @@index([productBrandId])
  @@index([productCategoryId])
}

model ProductExtensionText {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  productId String
  value     String   @db.MediumText

  type    ProductExtensionTextType
  product Product                  @relation(fields: [productId], references: [id])

  @@index([productId])
}

model ProductExtensionImage {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  productId String
  url       String   @unique

  type    ProductExtensionImageType
  product Product                   @relation(fields: [productId], references: [id])

  @@index([productId])
}

model GeneratedText {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  title     String   @db.VarChar(1000)
  body      String   @db.MediumText
  productId String
  published Boolean  @default(true)

  product Product   @relation(fields: [productId], references: [id])
  tag     TextTag[]

  @@index([productId])
}

model GeneratedImage {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  url       String
  productId String
  published Boolean  @default(true)

  product Product    @relation(fields: [productId], references: [id])
  tag     ImageTag[]

  @@index([productId])
}

model ProductBrand {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  name      String
  logoUrl   String?
  homeUrl   String
  published Boolean  @default(true)

  product Product[]
}

model ProductCategory {
  id        String  @id @default(uuid())
  name      String  @unique
  published Boolean @default(true)

  textTag  TextTag[]
  imageTag ImageTag[]
  product  Product[]

  @@index([name])
}

model TextTag {
  id              String  @id @default(uuid())
  name            String  @unique
  promptExtension String?
  published       Boolean @default(true)

  generatedText          GeneratedText[]
  product                Product[]
  UserTextTagExpectation UserTextTagExpectation[]
  ProductCategory        ProductCategory?         @relation(fields: [productCategoryId], references: [id])
  productCategoryId      String?

  @@index([name])
  @@index([productCategoryId])
}

model ImageTag {
  id              String  @id @default(uuid())
  name            String  @unique
  promptExtension String?
  published       Boolean @default(true)

  generatedImage          GeneratedImage[]
  product                 Product[]
  UserImageTagExpectation UserImageTagExpectation[]
  ProductCategory         ProductCategory?          @relation(fields: [productCategoryId], references: [id])
  productCategoryId       String?

  @@index([name])
  @@index([productCategoryId])
}

model UserTextTagExpectation {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  userId    String
  textTagId String

  textTag TextTag @relation(fields: [textTagId], references: [id])

  @@index([textTagId])
  @@index([userId])
}

model UserImageTagExpectation {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  userId     String
  imageTagId String

  imageTag ImageTag @relation(fields: [imageTagId], references: [id])

  @@index([imageTagId])
  @@index([userId])
}

enum ProductExtensionTextType {
  DESCRIPTION
  FEATURE
  SPEC
  DETAIL
  UPDATE
  OTHER
}

enum ProductExtensionImageType {
  MAIN
  DETAIL
  ENVIRONMENT
  OTHER
}
